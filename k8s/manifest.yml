---
apiVersion: v1
kind: Pod
metadata:
  name: nginx
  labels:
    env: dev
    app: nginx
spec:
  containers:
    - name: nginx
      image: nginx:alpine
      imagePullPolicy: IfNotPresent
      ports:
        - containerPort: 80
      resources:
        limits:
          memory: "256Mi"
          cpu: "0.5"
      readinessProbe:
        httpGet:
          path: /health
          port: 80
        initialDelaySeconds: 5
        periodSeconds: 30
      volumeMounts:
        - name: nginx-config-volume
          mountPath: /etc/nginx/conf.d
          readOnly: true
  volumes:
    - name: nginx-config-volume
      configMap:
        name: nginx-config

---
apiVersion: v1
kind: Pod
metadata:
  name: app
  labels:
    env: dev
    app: app
spec:
  containers:
    - name: app
      image: ghcr.io/unleftie/docker-gs-ping:latest
      imagePullPolicy: Always
      ports:
        - containerPort: 8080
      resources:
        limits:
          memory: "256Mi"
          cpu: "0.5"
      livenessProbe:
        httpGet:
          path: /health
          port: 8080
        initialDelaySeconds: 5
        periodSeconds: 30

---
apiVersion: v1
kind: Service
metadata:
  name: nginx-service
  labels:
    env: dev
spec:
  selector:
    app: nginx
  ports:
    - protocol: TCP
      port: 80
      targetPort: 80
  type: ClusterIP

---
apiVersion: v1
kind: Service
metadata:
  name: app-service
  labels:
    env: dev
spec:
  selector:
    app: app
  ports:
    - protocol: TCP
      port: 8080
      targetPort: 8080
  type: ClusterIP

---
apiVersion: v1
kind: ConfigMap
metadata:
  name: nginx-config
  labels:
    env: dev
data:
  default.conf: |
    server {
        listen 80;
        server_name _;

        location / {
            proxy_pass http://app-service.default.svc.cluster.local:8080;
        }
    }
