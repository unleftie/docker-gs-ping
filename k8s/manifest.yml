---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: nginx
spec:
  replicas: 1
  selector:
    matchLabels:
      app: nginx
  template:
    metadata:
      labels:
        app: nginx
        env: dev
        version: "1"
    spec:
      containers:
        - name: nginx
          image: nginx:alpine
          imagePullPolicy: IfNotPresent
          env:
            - name: ENVIRONMENT_LABEL
              valueFrom:
                fieldRef:
                  fieldPath: metadata.labels['env']
            - name: VERSION_LABEL
              valueFrom:
                fieldRef:
                  fieldPath: metadata.labels['version']
          ports:
            - containerPort: 80
          resources:
            limits:
              memory: "256Mi"
              cpu: "0.5"
          readinessProbe:
            httpGet:
              path: /health
              port: 80
            initialDelaySeconds: 5
            periodSeconds: 30
          volumeMounts:
            - name: nginx-config-volume
              mountPath: /etc/nginx/conf.d
              readOnly: true
      volumes:
        - name: nginx-config-volume
          configMap:
            name: nginx-config

---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: app
spec:
  replicas: 2
  selector:
    matchLabels:
      app: app
  template:
    metadata:
      labels:
        app: app
        env: dev
        version: "1"
    spec:
      containers:
        - name: app
          image: ghcr.io/unleftie/docker-gs-ping:latest
          imagePullPolicy: Always
          securityContext:
            runAsUser: 0 # FIXME: remove later
            runAsGroup: 0 # FIXME: remove later
          env:
            - name: ENVIRONMENT_LABEL
              valueFrom:
                fieldRef:
                  fieldPath: metadata.labels['env']
            - name: VERSION_LABEL
              valueFrom:
                fieldRef:
                  fieldPath: metadata.labels['version']
          ports:
            - containerPort: 8080
          resources:
            limits:
              memory: "256Mi"
              cpu: "0.5"
          livenessProbe:
            httpGet:
              path: /health
              port: 8080
            initialDelaySeconds: 5
            periodSeconds: 30

---
apiVersion: v1
kind: Service
metadata:
  name: nginx-service
spec:
  selector:
    app: nginx
  ports:
    - protocol: TCP
      port: 80
      targetPort: 80
  type: ClusterIP

---
apiVersion: v1
kind: Service
metadata:
  name: app-service
spec:
  selector:
    app: app
  ports:
    - protocol: TCP
      port: 8080
      targetPort: 8080
  type: ClusterIP

---
apiVersion: v1
kind: ConfigMap
metadata:
  name: nginx-config
data:
  default.conf: |
    server {
        listen 80;
        server_name _;

        location / {
            proxy_pass http://app-service.default.svc.cluster.local:8080;
        }
    }

---
apiVersion: autoscaling/v2
kind: HorizontalPodAutoscaler
metadata:
  name: app-autoscaling
spec:
  scaleTargetRef:
    apiVersion: apps/v1
    kind: Deployment
    name: app
  minReplicas: 2
  maxReplicas: 4
  metrics:
    - type: Resource
      resource:
        name: cpu
        target:
          type: Utilization
          averageUtilization: 30
